{"version":3,"file":"static/webpack/static/development/pages/item.js.cc5030b62c9ce13e64bd.hot-update.js","sources":["webpack:///./components/SingleItem.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport gql from \"graphql-tag\";\nimport { Query } from \"react-apollo\";\nimport styled from \"styled-components\";\nimport PropTypes from \"prop-types\";\nimport Head from \"next/head\";\nimport Error from \"./ErrorMessage\";\n\nconst SingleItemStyles = styled.div`\n  max-width: 1200px;\n  margin: 2rem auto;\n  box-shadow: ${({ theme }) => theme.bs};\n  display: grid;\n  grid-auto-columns: 1fr;\n  grid-auto-flow: column;\n  min-height: 800px;\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: contain;\n  }\n  .details {\n    margin: 3rem;\n    font-size: 2rem;\n  }\n`;\n\nexport const SINGLE_ITEM_QUERY = gql`\n  query SINGLE_ITEM_QUERY($id: ID!) {\n    item(where: { id: $id }) {\n      id\n      title\n      description\n      price\n      image\n      largeImage\n    }\n  }\n`;\n\nclass SingleItem extends Component {\n  render() {\n    const { id } = this.props;\n    return (\n      <Query query={SINGLE_ITEM_QUERY} variables={{ id }}>\n        {({ data }, loading, error) => {\n          console.log(\"error? \", error);\n          const { item } = data;\n          if (loading) return <p>Loading...</p>;\n          if (error) return <Error error={error} />;\n          if (!data.item)\n            return <Error error={{ message: `No item found for id ${id}` }} />;\n          return (\n            <SingleItemStyles>\n              <Head>\n                <title>Sick Fits | {item.title}</title>\n              </Head>\n              <img src={item.largeImage} alt={item.title} />\n              <div className=\"details\">\n                <h2>Viewing {item.title}</h2>\n                <p>{item.description}</p>\n              </div>\n            </SingleItemStyles>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nSingleItem.propTypes = {\n  id: PropTypes.string,\n};\n\nexport default SingleItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAgBA;AACA;AAYA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAGA;;;;AA3BA;AACA;AA6BA;AACA;AADA;AAIA;;;;A","sourceRoot":""}