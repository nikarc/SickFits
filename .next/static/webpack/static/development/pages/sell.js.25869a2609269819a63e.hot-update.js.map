{"version":3,"file":"static/webpack/static/development/pages/sell.js.25869a2609269819a63e.hot-update.js","sources":["webpack:///./components/CreateItem.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { Mutation } from \"react-apollo\";\nimport gql from \"graphql-tag\";\nimport Router from \"next/router\";\nimport formatMoney from \"../lib/formatMoney\";\nimport { cloudinaryPreset, cloudinaryName } from \"../config\";\nimport Form from \"./styles/Form\";\nimport ErrorMessage from \"./ErrorMessage\";\n\nexport const CREATE_ITEM_MUTATION = gql`\n  mutation CREATE_ITEM_MUTATION(\n    $title: String!\n    $description: String!\n    $price: Int\n    $image: String\n    $largeImage: String\n  ) {\n    createItem(\n      title: $title\n      description: $description\n      price: $price\n      image: $image\n      largeImage: $largeImage\n    ) {\n      id\n    }\n  }\n`;\n\nclass CreateItem extends Component {\n  state = {\n    title: \"\",\n    description: \"\",\n    image: \"\",\n    largeImage: \"\",\n    price: 0,\n  };\n\n  handleChange = e => {\n    const { name, type, value } = e.target;\n    const { state } = this;\n    state[e.target.name] = type === \"number\" ? parseFloat(value, 10) : value;\n    this.setState(state);\n  };\n\n  uploadFile = async e => {\n    const { files } = e.target;\n    const data = new FormData();\n    data.append(\"file\", files[0]);\n    data.append(\"upload_preset\", cloudinaryPreset);\n\n    try {\n      const res = await fetch(\n        `https://api.cloudinary.com/v1_1/${cloudinaryName}/image/upload`,\n        {\n          method: \"POST\",\n          body: data,\n        }\n      );\n\n      const file = await res.json();\n      console.log(file);\n\n      this.setState({\n        image: file.secure_url,\n        largeImage: file.eager[0].secure_url,\n      });\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  render() {\n    const { title, price, description, image } = this.state;\n    return (\n      <Mutation mutation={CREATE_ITEM_MUTATION} variables={this.state}>\n        {(createItem, { loading, error }) => (\n          <Form\n            onSubmit={async e => {\n              e.preventDefault();\n              const res = await createItem();\n              console.log(res);\n              Router.push({\n                pathname: \"/item\",\n                query: { id: res.data.createItem.id },\n              });\n            }}\n          >\n            <ErrorMessage error={error} />\n            <fieldset disabled={loading} aria-busy={loading}>\n              <label htmlFor=\"file\">\n                Image\n                <input\n                  type=\"file\"\n                  id=\"file\"\n                  name=\"file\"\n                  placeholder=\"file\"\n                  value={image}\n                  onChange={this.uploadFile}\n                  required\n                />\n              </label>\n              <label htmlFor=\"title\">\n                Title\n                <input\n                  type=\"text\"\n                  id=\"title\"\n                  name=\"title\"\n                  placeholder=\"title\"\n                  value={title}\n                  onChange={this.handleChange}\n                  required\n                />\n              </label>\n              <label htmlFor=\"price\">\n                Price\n                <input\n                  type=\"number\"\n                  id=\"price\"\n                  name=\"price\"\n                  placeholder=\"price\"\n                  value={price}\n                  onChange={this.handleChange}\n                  required\n                />\n              </label>\n              <label htmlFor=\"description\">\n                Description\n                <textarea\n                  id=\"description\"\n                  name=\"description\"\n                  placeholder=\"Enter a Description\"\n                  value={description}\n                  onChange={this.handleChange}\n                  required\n                />\n              </label>\n              <button type=\"submit\">Submit</button>\n            </fieldset>\n          </Form>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default CreateItem;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAmBA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAUA;AACA;AAFA;AACA;AAVA;AAOA;AAPA;AAAA;AACA;AADA;AAeA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAnBA;AAAA;AACA;AADA;AAAA;AAAA;AAuBA;AACA;AAxBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;AA0BA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA7DA;AAmEA;;;;AAlHA;AACA;AAoHA;;;;A","sourceRoot":""}